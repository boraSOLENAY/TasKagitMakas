<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="countDownTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgAB8fHwAhISELISEhJCEhITMhISE1ISEhNCEh
        ITQhISE1ISEhNSEhITUhISE1ISEhNSEhITUhISE1ISEhNSEhITQhISEgISEhAyEhIQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhACEhIQEhISEfISEhciEhIbwhISHgISEh7SEh
        Ie4hISHtISEh7SEhIeshISHrISEh7iEhIe4hISHuISEh7iEhIe4hISHuISEh7iEhIdohISGFISEhEyEh
        IQAhISEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgACEhIQAhISEXISEheCEhIdkhISH+ISEh/CEh
        IeUhISHUISEh0iEhIdIhISHYISEh+iEhIfohISHXISEh0iEhIdIhISHSISEh0iEhIdIhISHUISEh8SEh
        If4hISGcISEhDSEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISEAISEhMCEhIb8hISH+ISEh9iEh
        IbUhISFYISEhIyEhIRQhISESISEhESEhIS8hISHkISEh5CEhIS8hISEQISEhEiEhIRIhISESISEhEiEh
        IRIhISFNISEh4CEhIfwhISGDISEhBiEhIQAAAAAAAAAAAAAAAAAgICAAISEhACEhITMhISHPISEh/yEh
        IcghISFQISEhCyEhIQAgICAAAAAAAAAAAAAhISEAISEhHyEhIeIhISHiISEhHyEhIQAAAAAAAAAAAAAA
        AAAAAAAAISEhACEhIQAhISFVISEh7SEhIfYhISFtISEhAiEhIQAAAAAAICAgACEhIQAhISEnISEhzCEh
        If8hISG0ISEhICEhIQAhISEAAAAAAAAAAAAAAAAAISEhACEhIQAhISEjISEh5CEhIeUhISEqICAgASEh
        IQAgICAAAAAAAAAAAAAAAAAAISEhACEhIQIhISFrISEh9iEhIe4hISFXIiIiACEhIQAhISEAISEhCCEh
        IaMhISH/ISEhuCEhIR0hISEAISEhAAAAAAAhISEAISEhAiEhIRYhISFBISEheiEhIbIhISHnISEh+SEh
        Ic4hISGqISEhhyEhIWQhISFDISEhKCEhIRMhISEGIiIiACEhIQUhISGAISEh/CEhIeMhISE/ISEhACEh
        IQAhISFDISEh9CEhId8hISEuISEhACAgIAAhISENISEhMCEhIWYhISGfISEhwSEhIbwhISGRISEhZSEh
        IbUhISHnISEh7SEhIfohISH/ISEh/yEhIfghISHnISEh0yEhIbchISGVISEhTCEhIQ4hISGWISEh/yEh
        IbMhISELKSkpACEhIZEhISH/ISEhpyEhIS8hISFTISEhjSEhIbkhISHCISEhpCEhIW0hISE2ISEhDiEh
        IQwhISGPISEhryEhIS0hISEqISEhPyEhIVUhISF5ISEhySEhIf4hISHkISEhliEhIXshISHFISEhiCEh
        IT8hISHoISEh3iEhISEhISEXISEhziEhIf8hISH2ISEh6SEhIbchISGAISEhRyEhIRohISEDISEhACEh
        IQAhISENISEhkyEhIbEhISEeISEhACEhIQAhISEKISEhSSEhIaQhISHCISEhfiEhISghISECISEhACEh
        ISYhISGjISEhzCEhIfchISHTISEhGCEhIRkhISHUISEh/yEhId0hISHkISEhPiEhIQAhISEAAAAAAAAA
        AAAhISEAISEhDSEhIZMhISGxISEhHiEhIQAhISEFISEhVCEhIbUhISG9ISEhbiEhIR0hISEBISEhAAAA
        AAAfHx8AISEhACEhIQohISGMISEh/yEhIbUhISEIISEhCiEhIbwhISH8ISEhVCEhIZwhISFuISEhACEh
        IQAAAAAAISEhACEhIQQhISGIISEhsiEhIR4hISEAISEhACEhIVMhISHJISEhXiEhIRMhISEAISEhAAAA
        AAAAAAAAAAAAAAAAAAAgICAAISEhACEhIXkhISH/ISEhjSEhIQAhISEBISEhoCEhIf8hISFeISEhZCEh
        IaEhISECISEhAAAAAAAhISEAISEhHCEhIcQhISEyISEhACEhIQAmJiYAISEhnCEhIXEhISEAISEhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISECISEhpSEhIf8hISFiISEhACEhIQAhISGBISEh/yEh
        IYUhISEvISEhxiEhISohISEAISEhACEhIQAhISEhISEhwiEhISEhISEAISEhACEhIQAhISGNISEhfyEh
        IQAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhACEhIRAhISHLISEh9iEhITshISEAISEhACEh
        IUwhISH5ISEh1CEhISMhISGEISEhviEhIUchISEFISEhACEhISEhISHCISEhISEhIQAAAAAAISEhACEh
        IVEhISGzISEhCiEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhISEAISEhKSEhIekhISHeISEhHCEh
        IQAhISEAISEhDiEhIbghISH/ISEhfSEhIQohISFmISEhxiEhIZYhISElISEhISEhIcEhISEhISEhAAAA
        AAAhISEAISEhHiEhIcIhISEvISEhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISFMISEh/SEh
        IbshISEIISEhACEhIQAhISEAISEhTSEhIfUhISHfISEhKSEhIQAhISEiISEhjyEhIcQhISGGISEhxyEh
        ISIhISEAAAAAACEhIQAhISEDISEhoiEhIWkhISEAISEhAAAAAAAAAAAAAAAAAAAAAAAhISEAISEhACEh
        IXghISH/ISEhkSEhIQAhISEAAAAAACEhIQAhISEIISEhqSEhIf8hISGIJCQkACEhIQAhISECISEhiiEh
        Ib8hISHDISEhOSEhIQAAAAAAICAgACEhIQAhISFmISEhpSEhIQQhISEAAAAAAAAAAAAhISEAISEhAiEh
        ISQhISFvISEh2SEhIf8hISFgISEhACAgIAAAAAAAISEhACEhIQAhISFEISEh9CEhIdshISEiISEhACEh
        IREhISG4ISEhVCEhIaAhISFjISEhABwcHAAAAAAAISEhACEhISwhISHDISEhICEhIQAhISEAISEhCyEh
        IUMhISGUISEh1SEhIf0hISH/ISEh1CEhISAhISEAAAAAAAAAAAAAAAAAISEhACEhIQohISG0ISEh/yEh
        IXIhISEAISEhWCEhIbYhISELISEheiEhIY8hISEAICAgAAAAAAAhISEAISEhCSEhIbEhISFVISEhGSEh
        IWYhISG0ISEhvSEhIZwhISHYISEh/yEhIeMhISFOISEhACEhIQAAAAAAAAAAAAAAAAAhISEAISEhACEh
        IVghISH8ISEhyiEhIR8hISGuISEhZCEhIQAhISFOISEhsiEhIQghISEAAAAAACEhIQAhISEAISEheCEh
        IdAhISHBISEhqyEhIVchISE/ISEhuyEhIf8hISHWISEhQyEhIQAhISEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhISEAISEhEyEhIcghISH7ISEhriEhIbshISEXISEhACEhISkhISHCISEhHiEhIQAAAAAAAAAAACEh
        IQAhISE8ISEh2CEhIUghISEFISEhMCEhIcwhISH/ISEhyCEhITMhISEAISEhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACEhIQAhISEAISEhYCEhIfYhISH/ISEhliEhIQEhISEAISEhDiEhIbohISFAISEhAAAA
        AAAAAAAAISEhACEhIRUhISG+ISEhMyEhIQohISG1ISEh/yEhIbghISElISEhACEhIQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISEGISEhfyEhIfkhISHqISEhWCEhIQAhISEAISEhnSEh
        IWshISEAICAgAAAAAAAhISEAISEhBCEhIaghISFaISEhVSEhIfohISHWISEhJSEhIQAgICAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISEJISEhhiEhIfshISHoISEhUiEh
        IQAhISFzISEhliEhIQAhISEAAAAAACAgIAAhISEAISEhgSEhIZwhISHBISEh/yEhIW8hISEAISEhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISELISEhjSEh
        IfwhISHkISEhSCEhIUYhISG2ISEhCyEhIQAAAAAAAAAAACEhIQAhISFTISEh7SEhIf0hISHJISEhFyEh
        IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEh
        IQAhISENISEhlCEhIf4hISHeISEhaCEhIcEhISEjISEhAAAAAAAhISEAISEhACEhITwhISHzISEh+iEh
        IV8hISEAISEhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACEhIQAhISEPISEhmyEhIf4hISHlISEh4yEhIUUhISEAISEhACEhIQUhISEsISEhqyEh
        If8hISG1ISEhDyEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAhISESISEhoiEhIf4hISH/ISEhgCEhISUhISFeISEhqiEh
        IechISH/ISEh2CEhITUhISEAISEhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhACEhIQAhISEVISEhqiEhIf8hISHzISEh6iEh
        If0hISH/ISEh6CEhIaUhISEzISEhACEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHx8fACEhIQAhISEYISEhiiEh
        IdQhISHbISEhtSEhIW0hISEqISEhBiEhIQAfHx8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEh
        IQAhISEDISEhGSEhIR4hISEKIyMjACAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AAP/wAAB/4AAAP8AAAB+B8P4PB/B+Dg8AAQYYAAACAAAAAADDAQAPh
        AeADww/xAcc/4YHHP+GARx/hgAcf4cIHH+PDB48D4QeMA+EHgAfwI8AP8CPAH/gjwD/4M8B//BPg//4B
        4P//AeH//4GB///AA///4Af///AP///4f/8=
</value>
  </data>
</root>